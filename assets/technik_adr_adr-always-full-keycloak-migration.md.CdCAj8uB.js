import{_ as r,D as t,c as i,I as s,j as e,a as n,a2 as o,o as l}from"./chunks/framework.CNEjLQJj.js";const v=JSON.parse('{"title":"Immer vollständiger Migration nach Keycloak","description":"","frontmatter":{},"headers":[],"relativePath":"technik/adr/adr-always-full-keycloak-migration.md","filePath":"technik/adr/adr-always-full-keycloak-migration.md"}'),d={name:"technik/adr/adr-always-full-keycloak-migration.md"},h=e("h1",{id:"immer-vollstandiger-migration-nach-keycloak",tabindex:"-1"},[n("Immer vollständiger Migration nach Keycloak "),e("a",{class:"header-anchor",href:"#immer-vollstandiger-migration-nach-keycloak","aria-label":'Permalink to "Immer vollständiger Migration nach Keycloak"'},"​")],-1),u=e("h2",{id:"status",tabindex:"-1"},[n("Status "),e("a",{class:"header-anchor",href:"#status","aria-label":'Permalink to "Status"'},"​")],-1),c=o('<h2 id="kontext" tabindex="-1">Kontext <a class="header-anchor" href="#kontext" aria-label="Permalink to &quot;Kontext&quot;">​</a></h2><p>Initiator für eine genauere Betrachtung von Keycloak und Keycloakmigration war die von renovate vorgeschlagene Hebung von Version 20 auf 24. Diese wurde zuerst auch durchgeführt (siehe <a href="https://github.com/it-at-m/Wahllokalsystem/pull/241" target="_blank" rel="noreferrer">PR - 241</a>), musste aber aufgrund von Inkompatibilitäten mit unseren Migrationsskripten wieder durch <a href="https://github.com/it-at-m/Wahllokalsystem/pull/231" target="_blank" rel="noreferrer">PR - 231</a> zurückgenommen werden. Zum Zeitpunkt der Rücknahme war nicht bekannt wie man mit den Userattributen, <code>wahlbezirk_art</code>, die wir einfügen wollten, umgehen konnte. In diesem Zusammenhang viel auch auf, dass im Unterschied zur Version 20, mit der Version keine Deltamigration mehr möglich war.</p><p>Es entstand das <a href="https://github.com/it-at-m/Wahllokalsystem/issues/248" target="_blank" rel="noreferrer">Issue - 248</a>. Es wurde keine Lösung gefunden wie über Keycloak-Migration die Userattribute pflegbar waren. Daher wurde das Issue geschlossen.</p><p>Später viel auf, dass die Version 20 von Keycloak und Keycloakmigration es nicht ermöglichte, die Gruppenzuordnung einer Rolle zu entfernen (<a href="https://github.com/it-at-m/Wahllokalsystem/issues/361" target="_blank" rel="noreferrer">Issue - 361</a>).</p><p>Daher wurde das <a href="https://github.com/it-at-m/Wahllokalsystem/issues/248" target="_blank" rel="noreferrer">Thema</a> erneut eröffnet.</p><p>Die Beschreibung für den <a href="https://www.keycloak.org/server/containers#_importing_a_realm_on_startup" target="_blank" rel="noreferrer">Import</a> eines Realms beim Start haben wir später gefunden. Die Option <code>Unmanaged Attributes</code> in den Realmsettings, ermöglichte es Userattribute zu verwenden.</p><h2 id="entscheidung" tabindex="-1">Entscheidung <a class="header-anchor" href="#entscheidung" aria-label="Permalink to &quot;Entscheidung&quot;">​</a></h2><p>Wir verwenden Keycloak in Version 25 und Migrationen nach Keycloak werden immer vollständig durchgeführt. Es muss keine Delta-Migration geben.</p><p>Dadurch das Keycloak zeitnah durch unseren Authservice abgelößt wird, überwog der <em>KISS</em>-Aspekt. Anstelle einer umfangreichen Featurelist konzentrieren wir uns auf wenige notwendige Arten von API-Calls durch Keycloakmigration.</p><p>Unterstützt wird die Entscheidung gegen die Option einer Delta-Migration von unserem Nutzungsverhalten. Wir wechseln häufig zwischen verschiedenen Feature-Branches. Die jeweiligen Branches haben Migrationsfiles die der andere Branch nicht hat. Daher führen wir meist eine vollständige Migration durch.</p><h2 id="konsequenzen" tabindex="-1">Konsequenzen <a class="header-anchor" href="#konsequenzen" aria-label="Permalink to &quot;Konsequenzen&quot;">​</a></h2><h3 id="positiv" tabindex="-1">positiv <a class="header-anchor" href="#positiv" aria-label="Permalink to &quot;positiv&quot;">​</a></h3><p>Es ist kein Zusatzwissen oder zusätzlichen Tätigkeiten beim Erstellen des JSON-Files für den Import erforderlich. Wenn man eine Deltamigration ermöglichen will, muss man manuell zu den exportieren Daten aus Keycloak Rollen und Benutzer hinzufügen.</p><p>Wir benötigen nur einen kleinen Teil der Funktionen von keycloakmigration. Aufgrund der Erfahrungen mit nicht funktionierenden Features ist somit das Risiko geringer, dass wir in einen Fehler laufen.</p><p>Mit der Fokussierung auf eine vollständige Migration ist es möglich die Keycloak-Files überschaubarer anzuordnen.</p><h3 id="negativ" tabindex="-1">negativ <a class="header-anchor" href="#negativ" aria-label="Permalink to &quot;negativ&quot;">​</a></h3><p>Es muss immer eine vollständige Migration erfolgen. Eine Teilmigration ist nicht möglich.</p>',17);function g(m,k,p,f,b,_){const a=t("adr-status");return l(),i("div",null,[h,u,s(a,{status:"accepted"}),c])}const y=r(d,[["render",g]]);export{v as __pageData,y as default};
