import{_ as n,c as i,a2 as a,o as s}from"./chunks/framework.DAx0yoxq.js";const c=JSON.parse('{"title":"Uppercase-Convention für Datenbanken","description":"","frontmatter":{},"headers":[],"relativePath":"technik/coding_conventions/db_naming.md","filePath":"technik/coding_conventions/db_naming.md"}'),t={name:"technik/coding_conventions/db_naming.md"};function l(r,e,h,p,d,k){return s(),i("div",null,e[0]||(e[0]=[a(`<h1 id="uppercase-convention-fur-datenbanken" tabindex="-1">Uppercase-Convention für Datenbanken <a class="header-anchor" href="#uppercase-convention-fur-datenbanken" aria-label="Permalink to &quot;Uppercase-Convention für Datenbanken&quot;">​</a></h1><h2 id="kontext" tabindex="-1">Kontext <a class="header-anchor" href="#kontext" aria-label="Permalink to &quot;Kontext&quot;">​</a></h2><p>Aktuell sind sowohl Namen als auch Properties der Datenbanktabellen mal in Uppercase, mal in Lowercase. Sofern Oracle und h2 nicht durch eine Änderung der migration-scripts auf Probleme stößt, wurde die Frage gestellt, die Tabellennamen und Properties zu vereinheitlichen.</p><h2 id="entscheidung" tabindex="-1">Entscheidung <a class="header-anchor" href="#entscheidung" aria-label="Permalink to &quot;Entscheidung&quot;">​</a></h2><p>Nachdem ein Renaming der migration-scripts gemäß Recherche möglich ist, werden die Skripte aller Services refactored: Syntax in Uppercase, Tabellenname, entsprechend der Klassenamen, in UpperCamelCase und die Properties in lowerCamelCase.</p><p>Beispiel:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Wahlbezirk</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wahlbezirkArt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,7)]))}const g=n(t,[["render",l]]);export{c as __pageData,g as default};
