import{_ as e,c as r,o as t,a2 as a}from"./chunks/framework.Cqb_bBC1.js";const b=JSON.parse('{"title":"Getting started","description":"","frontmatter":{},"headers":[],"relativePath":"technik/get_started/index.md","filePath":"technik/get_started/index.md"}'),i={name:"technik/get_started/index.md"},n=a('<h1 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h1><h2 id="formatter-einrichten" tabindex="-1">Formatter einrichten <a class="header-anchor" href="#formatter-einrichten" aria-label="Permalink to &quot;Formatter einrichten&quot;">​</a></h2><p>Im Projekt verwenden wir <code>checkstyle</code> und <code>spotless</code> um für einen möglichst einheitlichen Codestyle zu sorgen. Dazu haben wir Regeln definiert. Diese Regeln und deren Hinterlegung in der jeweiligen IDE ist <a href="https://github.com/it-at-m/itm-java-codeformat" target="_blank" rel="noreferrer">hier</a> beschrieben.</p><h2 id="workflows" tabindex="-1">Workflows <a class="header-anchor" href="#workflows" aria-label="Permalink to &quot;Workflows&quot;">​</a></h2><h3 id="pull-requests" tabindex="-1">Pull-Requests <a class="header-anchor" href="#pull-requests" aria-label="Permalink to &quot;Pull-Requests&quot;">​</a></h3><p>Mit der Erstellung eines Pull-Requests wird mittels Workflow geprüft das der Code funktional ist: <code>mvn verify</code>. Das bedeutet es werden die Tests ausgeführt und geprüft dass das Codestyle den Anforderungen entspricht.</p><h3 id="push-auf-defaultbranch" tabindex="-1">Push auf Defaultbranch <a class="header-anchor" href="#push-auf-defaultbranch" aria-label="Permalink to &quot;Push auf Defaultbranch&quot;">​</a></h3><p>Unser Defaultbranch ist <code>dev</code>. Mit einem Push auf den Branch wird bei den Backendservices ein Containerimages erzeugt das in der Github-Container-Registriy hinterlegt wird. Als Tag wird <code>latest-dev</code> verwendet.</p><h3 id="namenskonventionen" tabindex="-1">Namenskonventionen <a class="header-anchor" href="#namenskonventionen" aria-label="Permalink to &quot;Namenskonventionen&quot;">​</a></h3><p>❗ Ist zu beachten dass alle Workflows im Ordner <code>workflows</code> liegen müssen. Sie dürfen nicht auf unterordner aufgeteilt werden. Zur besseren Strukturierung in dem Ordner soll daher auf eine einheitliche Namenskonvention geachtet werden.</p><ul><li><code>callable-&lt;kurzbeschreibung&gt;.yml</code> ... <a href="https://docs.github.com/de/actions/using-workflows/reusing-workflows" target="_blank" rel="noreferrer">wiederverenbare Workflows</a></li><li><code>dispatch-&lt;kurzbeschreibung&gt;.yml</code> ... <a href="https://docs.github.com/de/actions/using-workflows/manually-running-a-workflow" target="_blank" rel="noreferrer">manuell ausführbare workflows</a></li><li><code>&lt;service-namer&gt;_&lt;trigger&gt;.yml</code> ... Workflows zu Jobs die durch ein bestimmtes Ereignis getriggert werden.</li></ul><h4 id="beispiele" tabindex="-1">Beispiele <a class="header-anchor" href="#beispiele" aria-label="Permalink to &quot;Beispiele&quot;">​</a></h4><h5 id="callable-kurzbezeichnung-yml" tabindex="-1"><code>callable-&lt;kurzbezeichnung&gt;.yml</code> <a class="header-anchor" href="#callable-kurzbezeichnung-yml" aria-label="Permalink to &quot;`callable-&lt;kurzbezeichnung&gt;.yml`&quot;">​</a></h5><p><code>callable-create-github-container-image.yml</code> beinhaltet einen wiedervenbaren Workflow der ein Containerimage für Github erstellt.</p><h5 id="dispatch-kurzbeschreibung-yml" tabindex="-1"><code>dispatch-&lt;kurzbeschreibung&gt;.yml</code> <a class="header-anchor" href="#dispatch-kurzbeschreibung-yml" aria-label="Permalink to &quot;`dispatch-&lt;kurzbeschreibung&gt;.yml`&quot;">​</a></h5><p><code>dispatch-microservice-mvn-release.yml</code> ist ein Workflow der manuell getriggert wird ein Maven-Release eines Mikroservices durchzuführen.</p><h5 id="service-namer-trigger-yml" tabindex="-1"><code>&lt;service-namer&gt;_&lt;trigger&gt;.yml</code> <a class="header-anchor" href="#service-namer-trigger-yml" aria-label="Permalink to &quot;`&lt;service-namer&gt;_&lt;trigger&gt;.yml`&quot;">​</a></h5><p><code>wls-broadcast-service_push-dev-yml</code> ist der Workflow zum <code>wls-broadcast-service</code> der bei einem <code>push</code> auf <code>dev</code> ausgeführt wird.</p><p><code>doc_pull-request.yml</code> ist der Workflow zur Dokumentation, der bei einem <code>pull request</code> ausgeführt wird.</p>',19),l=[n];function o(s,d,c,h,u,g){return t(),r("div",null,l)}const f=e(i,[["render",o]]);export{b as __pageData,f as default};
